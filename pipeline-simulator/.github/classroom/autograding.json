{
  "tests": [
    {
      "name": "Combined tests",
      "setup": "",
      "run": "printf '#!/bin/bash\\n\\ntestf ()\\n{\\nlocal __resultvar=$1\\nlocal blocks=$2\\nlocal sets=$3\\nlocal assoc=$4\\n\\ntimeout 5s ./sim -f atest.mc -b $blocks -s $sets -a $assoc > out;\\nlocal eactions=$(head -n -2 out> eact)\\nlocal ehit=$(grep Hits out | cut -d \" \" -f 2 | tr -d \" \")\\nlocal emiss=$(grep Misses out | cut -d \" \" -f 2 | tr -d \" \")\\n\\ntimeout 5s ./ref_sim -f atest.mc -b $blocks -s $sets -a $assoc > mout;\\nlocal actions=$(head -n -2 out > act)\\nlocal hit=$(grep Hits out | cut -d \" \" -f 2 | tr -d \" \")\\nlocal miss=$(grep Misses out | cut -d \" \" -f 2 | tr -d \" \")\\n\\nf_pass=0\\n\\ndiff eact act > /dev/null\\n\\n#if [ diff eact act > /dev/null -eq 0 ]; then\\nif [ $? -eq 0 ]; then\\n    echo \"Actions success\"\\n        f_pass=$(($f_pass + 1))\\nelse\\n  echo \"Cycles fail\"\\nfi\\n\\nif [ \"$hit\" -eq \"$ehit\" ]; then\\n     echo \"Hits success\"\\n   f_pass=$(($f_pass + 1))\\nelse\\n  echo \"Hits fail\"\\nfi\\n\\nif [ \"$miss\" -eq \"$emiss\" ]; then\\n     echo \"Misses success\"\\n f_pass=$(($f_pass + 1))\\nelse\\n  echo \"Misses fail\"\\nfi\\n\\neval $__resultvar=\"'$f_pass'\"\\n#echo \"$f_pass\"\\n#local retval=$v_pass\\n#exit $retval\\n}\\n\\nn_tests=18\\nv_pass=0\\n\\nchmod +x ref_sim\\n\\n#make clean > /dev/null && make > /dev/null\\n#if [ $? -ne 0 ]; then\\nif [ $(make clean > /dev/null && make > /dev/null) ]; then\\n        echo \"0/$n_tests tests pass -- program does not compile\"\\n       exit 255\\nfi\\n\\n################################################\\n#run tests\\n################################################\\nif [ -f sim ]; then\\n    # Pass 1\\n      printf \"13107206\\n8912919\\n8912926\\n25165824\" > atest.mc\\n       echo \"Provided:         \"\\n     #./test.sh\\n    #pass=$?\\n      pass=0\\n        testf pass 4 2 1\\n      v_pass=$(( $v_pass + $f_pass ))\\n        if [ \"$f_pass\" -eq 3 ]; then\\n          echo \"PASS (3/3)\"\\n     else\\n          echo \"FAIL ($f_pass/3)\"\\n        fi\\n    echo\\n\\n        # Pass 2\\n      printf \"9568268\\n14286849\\n9109505\\n15794179\\n9109505\\n25165824\" > atest.mc\\n    echo \"SA 1:             \"\\n     #./test.sh\\n    #pass=$?\\n      testf pass 4 4 2\\n      v_pass=$(($v_pass + $f_pass))\\n  if [ \"$f_pass\" -eq 3 ]; then\\n          echo \"PASS (3/3)\"\\n     else\\n          echo \"FAIL ($f_pass/3)\"\\n        fi\\n    echo\\n\\n        # Pass 3\\n      printf \"8978443\\n10027013\\n12124162\\n14811137\\n15532033\\n10027015\\n25165824\" > atest.mc\\n        echo \"SA 2:     \"\\n     #./test.sh\\n    #pass=$?\\n      testf pass 8 2 4\\n      v_pass=$(($v_pass + $f_pass))\\n  if [ \"$f_pass\" -eq 3 ]; then\\n          echo \"PASS (3/3)\"\\n     else\\n          echo \"FAIL ($f_pass/3)\"\\n        fi\\n    echo\\n\\n        # Pass 4\\n      printf \"10223703\\n12124215\\n13697040\\n8978433\\n10354738\\n13893643\\n10158147\\n25165824\" > atest.mc\\n      echo \"DM 2:             \"\\n     #./test.sh\\n    #pass=$?\\n      testf pass 16 32 1\\n     v_pass=$(($v_pass + $f_pass))\\n if [ $f_pass -eq 3 ]; then\\n            echo \"PASS (3/3)\"\\n     else\\n          echo \"FAIL ($f_pass/3)\"\\n        fi\\n    echo\\n\\n        # Pass 5\\n      printf \"9699339\\n10551308\\n14745612\\n15138829\\n14221313\\n25165824\" > atest.mc\\n  echo \"SA 3:             \"\\n     #./test.sh\\n    #pass=$?\\n      testf pass 2 8 128\\n    v_pass=$(($v_pass + $f_pass))\\n  if [ \"$f_pass\" -eq 3 ]; then\\n          echo \"PASS (3/3)\"\\n     else\\n          echo \"FAIL ($f_pass/3)\"\\n        fi\\n    echo\\n\\n        # Pass 5\\n      printf \"8912899\\n13107214\\n11534413\\n15204353\\n11010050\\n9437235\\n14155784\\n25165824\\n\" > atest.mc\\n     echo \"FA 1:             \"\\n     #./test.sh\\n    #pass=$?\\n      testf pass 64 1 32\\n     v_pass=$(($v_pass + $f_pass))\\n if [ \"$f_pass\" -eq 3 ]; then\\n          echo \"PASS (3/3)\"\\n     else\\n  echo \"FAIL ($f_pass/3)\"\\n        fi\\n    echo\\nfi\\n\\n################################################\\n# Final report\\n################################################\\nn_pass=$v_pass;\\necho \"$n_pass/$n_tests total tests passed\"\\n\\nretval=$(($n_pass - $n_tests))\\nexit $retval\\n\\n' > atest.sh; bash atest.sh",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 1,
      "points": 1
    }
  ]
}