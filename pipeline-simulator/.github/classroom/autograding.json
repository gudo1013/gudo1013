{
  "tests": [
    {
      "name": "Combined tests",
      "setup": "",
      "run": "printf '#!/bin/bash\\n\\ntestf ()\\n{\\nlocal __resultvar=$1\\n\\ntimeout 5s ./sim -i atest.mc > out;\\nlocal ecyc=$(grep cycles out | cut -d \" \" -f 3 | tr -d \" \")\\nlocal efetch=$(grep fetched out | cut -d \" \" -f 3 | tr -d \" \")\\nlocal eret=$(grep retired out | cut -d \" \" -f 3 | tr -d \" \")\\nlocal ebranch=$(grep branches out | cut -d \" \" -f 3 | tr -d \" \")\\nlocal emis=$(grep mispred out | cut -d \" \" -f 3 | tr -d \" \")\\n\\ntimeout 5s ./ref_sim -i atest.mc > mout;\\nlocal cyc=$(grep cycles mout | cut -d \" \" -f 3 | tr -d \" \")\\nlocal fetch=$(grep fetched mout | cut -d \" \" -f 3 | tr -d \" \")\\nlocal ret=$(grep retired mout | cut -d \" \" -f 3 | tr -d \" \")\\nlocal branch=$(grep branches mout | cut -d \" \" -f 3 | tr -d \" \")\\nlocal mis=$(grep mispred mout | cut -d \" \" -f 3 | tr -d \" \")\\n\\nf_pass=0\\n\\nif [ \"$cyc\" -eq \"$ecyc\" ]; then\\n  echo \"Cycles success\"\\n    f_pass=$(($f_pass + 1))\\nelse\\n echo \"Cycles fail\"\\nfi\\n\\nif [ \"$fetch\" -eq \"$efetch\" ]; then\\n echo \"Fetches success\"\\n        f_pass=$(($f_pass + 1))\\nelse\\n    echo \"Fetches fail\"\\nfi\\n\\nif [ \"$ret\" -eq \"$eret\" ]; then\\n    echo \"Retired success\"\\n        f_pass=$(($f_pass + 1))\\nelse\\n echo \"Retired fail\"\\nfi\\n\\nif [ \"$branch\" -eq \"$ebranch\" ]; then\\n echo \"Branches executed success\"\\n      f_pass=$(($f_pass + 1))\\nelse\\n echo \"Branches executed fail\"\\nfi\\n\\nif [ \"$mis\" -eq \"$emis\" ]; then\\n     echo \"Mispredictions success\"\\n f_pass=$(($f_pass + 1))\\nelse\\n echo \"Mispredictions fail\"\\nfi\\n\\neval $__resultvar=\"'$f_pass'\"\\n#echo \"$f_pass\"\\n#local retval=$v_pass\\n#exit $retval\\n}\\n\\nn_tests=60\\nv_pass=0\\n\\nchmod +x ref_sim\\n\\n#make clean > /dev/null && make > /dev/null\\n#if [ $? -ne 0 ]; then\\nif [ $(make clean > /dev/null && make > /dev/null) ]; then\\n    echo \"0/$n_tests tests pass -- program does not compile\"\\n      exit 255\\nfi\\n\\n################################################\\n#run tests\\n################################################\\nif [ -f sim ]; then\\n      # Pass 1\\n      printf \"9437189\\n589827\\n7077894\\n1310723\\n25165824\\n10\" > atest.mc\\n      echo \"Hazard free 1:            \"\\n     #./test.sh\\n    #pass=$?\\n      pass=0\\n        testf pass\\n       v_pass=$(( $v_pass + $f_pass ))\\n       if [ \"$f_pass\" -eq 5 ]; then\\n          echo \"PASS (5/5)\"\\n     else\\n          echo \"FAIL ($f_pass/5)\"\\n       fi\\n       echo\\n\\n        # hazard free 2\\n       printf \"8912905\\n29360128\\n6619139\\n29360128\\n4\\n589826\\n16842753\\n29360128\\n25165824\\n1\" > atest.mc\\n  echo \"Hazard free 2:               \"\\n     #./test.sh\\n    #pass=$?\\n      pass=0\\n        testf pass\\n    v_pass=$(( $v_pass + $f_pass ))\\n       if [ \"$f_pass\" -eq 5 ]; then\\n             echo \"PASS (5/5)\"\\n     else\\n          echo \"FAIL ($f_pass/5)\"\\n       fi\\n    echo\\n\\n        # Pass 2\\n      printf \"8912902\\n9437191\\n1114115\\n1703940\\n14876672\\n25165824\\n5\\n2\" > atest.mc\\n echo \"Load stall 1:             \"\\n     #./test.sh\\n    #pass=$?\\n      testf pass\\n    v_pass=$(($v_pass + $f_pass))\\n    if [ \"$f_pass\" -eq 5 ]; then\\n          echo \"PASS (5/5)\"\\n     else\\n          echo \"FAIL ($f_pass/5)\"\\n       fi\\n    echo\\n\\n        # Pass 3\\n      printf \"8912906\\n9437195\\n589825\\n5373954\\n17432578\\n1114115\\n5832707\\n3014661\\n15466498\\n25165824\\n2\\n3\" > atest.mc\\n     echo \"Data forwarding 1:        \"\\n     #./test.sh\\n       #pass=$?\\n      testf pass\\n    v_pass=$(($v_pass + $f_pass))\\n if [ \"$f_pass\" -eq 5 ]; then\\n          echo \"PASS (5/5)\"\\n     else\\n          echo \"FAIL ($f_pass/5)\"\\n  fi\\n    echo\\n\\n        # Pass 4\\n      printf \"8912913\\n9437202\\n1114115\\n1114116\\n18612226\\n15007745\\n5898244\\n5505027\\n11010067\\n2162690\\n1376258\\n18022401\\n5373953\\n13959169\\n16777217\\n2883586\\n25165824\\n5\\n16\\n10\" > atest.mc\\n    echo \"Multihazard 1:            \"\\n     #./test.sh\\n    #pass=$?\\ntestf pass\\n     v_pass=$(($v_pass + $f_pass))\\n if [ $f_pass -eq 5 ]; then\\n            echo \"PASS (5/5)\"\\n     else\\n          echo \"FAIL ($f_pass/5)\"\\n       fi\\n       echo\\n\\n        # Pass 5\\n      printf \"8912910\\n11010063\\n9961488\\n1638404\\n5832709\\n9437201\\n1245190\\n15794186\\n17694721\\n29360128\\n12058642\\n20774913\\n65538\\n25165824\\n8\\n3\\n2\\n6\\n15\" > atest.mc\\n    echo \"Multihazard 2:            \"\\n     #./test.sh\\n    #pass=$?\\n      testf pass\\n    v_pass=$(($v_pass + $f_pass))\\n    if [ \"$f_pass\" -eq 5 ]; then\\n          echo \"PASS (5/5)\"\\n     else\\n          echo \"FAIL ($f_pass/5)\"\\n       fi\\n    echo\\n\\n        # Pass 6\\n      printf \"8912917\\n589826\\n9437206\\n1114115\\n9961495\\n14417926\\n10485785\\n4849669\\n16777216\\n11010070\\n18153474\\n8912917\\n14417926\\n11534362\\n12058648\\n4063236\\n10485783\\n14680073\\n8912921\\n720898\\n25165824\\n1\\n3\\n4\\n8\\n10\\n17\" > atest.mc\\n        echo \"Multihazard 3:            \"\\n     #./test.sh\\n    #pass=$?\\n      testf pass\\n       v_pass=$(($v_pass + $f_pass))\\n if [ \"$f_pass\" -eq 5 ]; then\\n          echo \"PASS (5/5)\"\\n     else\\n          echo \"FAIL ($f_pass/5)\"\\n       fi\\n    echo\\n\\n   # Pass 7\\n      printf \"8912919\\n9437207\\n17432578\\n4784129\\n1179650\\n16777216\\n655363\\n10485784\\n18612226\\n4784129\\n589825\\n2162692\\n1703939\\n19070977\\n14876684\\n11010073\\n2424836\\n18612225\\n851969\\n17301506\\n1\\n4718593\\n25165824\\n5\\n10\\n-5\" > atest.mc\\n    echo \"Multihazard 4:            \"\\n     #./test.sh\\n    #pass=$?\\n testf pass\\n    v_pass=$(($v_pass + $f_pass))\\n if [ \"$f_pass\" -eq 5 ]; then\\n          echo \"PASS (5/5)\"\\n     else\\n          echo \"FAIL ($f_pass/5)\"\\n fi\\n     echo\\n\\n        # Pass 8\\n      printf \"8912920\\n9437209\\n9961498\\n1703940\\n15466497\\n851971\\n1769473\\n4849668\\n19267585\\n1114115\\n5963779\\n11534360\\n3538946\\n11010073\\n7667714\\n13828098\\n17891331\\n655363\\n14549000\\n5963779\\n29360128\\n8912923\\n589826\\n25165824\\n1\\n2\\n3\\n6\" > atest.mc\\n     echo \"Multihazard 5:      \"\\n      #./test.sh\\n    #pass=$?\\n      testf pass\\n    v_pass=$(($v_pass + $f_pass))\\n if [ \"$f_pass\" -eq 5 ]; then\\n          echo \"PASS (5/5)\"\\n     else\\n    echo \"FAIL ($f_pass/5)\"\\n        fi\\n    echo\\n\\n        # Pass 9\\n      printf \"11534350\\n3407874\\n5505026\\n17301504\\n13107224\\n9437197\\n4259843\\n1638404\\n29360128\\n29360128\\n16777216\\n15794184\\n25165824\\n0\\n1\" > atest.mc\\n    echo \"Multihazard 6:            \"\\n     #./test.sh\\n    #pass=$?\\n      testf pass\\n    v_pass=$(($v_pass + $f_pass))\\n    if [ \"$f_pass\" -eq 5 ]; then\\n          echo \"PASS (5/5)\"\\n     else\\n          echo \"FAIL ($f_pass/5)\"\\n       fi\\n    echo\\n\\n        # Pass 10\\n        printf \"8912912\\n589826\\n9437201\\n17432579\\n1114115\\n4390913\\n15269915\\n9961489\\n3342341\\n7143427\\n14614529\\n65537\\n17498113\\n7929863\\n1835015\\n25165824\\n1\\n2\" > atest.mc\\n       echo \"Multihazard 7:            \"\\n     #./test.sh\\n    #pass=$?\\n      testf pass\\n    v_pass=$(($v_pass + $f_pass))\\n if [ \"$f_pass\" -eq 5 ]; then\\n             echo \"PASS (5/5)\"\\n     else\\n          echo \"FAIL ($f_pass/5)\"\\n       fi\\n    echo\\n\\n        # Pass 11\\n     printf \"8912904\\n589826\\n17301508\\n17367041\\n1179651\\n1179652\\n14745603\\n25165824\\n5\" > atest.mc\\n echo  \"Multihazard 8:           \"\\n     #./test.sh\\n    #pass=$?\\n      testf pass\\n       v_pass=$(($v_pass + $f_pass))\\n if [ \"$f_pass\" -eq 5 ]; then\\n          echo \"PASS (5/5)\"\\n     else\\n          echo \"FAIL ($f_pass/5)\"\\n       fi\\n    echo\\n\\nfi\\n\\n################################################\\n# Final report\\n################################################\\nn_pass=$v_pass;\\necho \"$n_pass/$n_tests total tests passed\"\\n\\nretval=$(($n_pass - $n_tests))\\nexit $retval\\n\\n' >atest.sh; bash atest.sh",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 1,
      "points": 1
    }
  ]
}